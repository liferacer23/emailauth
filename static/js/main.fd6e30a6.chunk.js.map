{"version":3,"sources":["firebase-config.js","App.js","reportWebVitals.js","index.js"],"names":["REACT_APP_API_KEY","process","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","getAuth","App","useState","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","user","setUser","err","setErr","onAuthStateChanged","currentUser","login","a","signInWithEmailAndPassword","console","log","message","logOut","signOut","SignUp","createUserWithEmailAndPassword","htmlFor","name","type","onChange","e","target","value","onClick","email","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGOA,EAAmBC,6IAAnBD,kBACDE,EAAiB,CACnBC,OAAO,GAAD,OAAKH,GACXI,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,gBAGXC,EAAMC,YAAcT,GAEbU,EAAOC,YAAQH,G,eCiEfI,MA5Ef,WACE,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAqBR,mBAAS,IAA9B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAmBV,mBAAS,IAA5B,mBAAOW,EAAP,KAAWC,EAAX,KAEDC,YAAmBhB,GAAK,SAACiB,GACrBJ,EAAQI,MAIX,IAQMC,EAAK,uCAAG,4BAAAC,EAAA,+EAEWC,YAA2BpB,EAAKQ,EAAWE,GAFtD,OAEFE,EAFE,OAGRS,QAAQC,IAAIV,GAHJ,gDAOAG,EAAO,KAAMQ,SACbF,QAAQC,IAAI,KAAMC,SARlB,yDAAH,qDAWLC,EAAM,uCAAG,sBAAAL,EAAA,sEACLM,YAAQzB,GADH,2CAAH,qDAGN0B,EAAM,uCAAG,4BAAAP,EAAA,+EAEUQ,YAA+B3B,EAAKI,EAAcE,GAF5D,OAEHM,EAFG,OAGTS,QAAQC,IAAIV,GAHH,gDAODG,EAAO,KAAMQ,SACjBF,QAAQC,IAAI,KAAMC,SARb,yDAAH,qDAWZ,OACE,gCACE,gCACE,yCACA,uBAAOK,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,KAAK,OAAOC,SAtCd,SAACC,GAAQ3B,EAAiB2B,EAAEC,OAAOC,UAwCrD,uBAAON,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,KAAK,WAAWC,SAxClB,SAACC,GAAQzB,EAAoByB,EAAEC,OAAOC,UAyC3D,wBAAQC,QAAST,EAAjB,6BAGF,gCACE,wCACA,uBAAOE,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,KAAK,OAAOC,SA5Cd,SAACC,GAAQvB,EAAcuB,EAAEC,OAAOC,UA8ClD,uBAAON,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,KAAK,WAAWC,SA9ClB,SAACC,GAAQrB,EAAiBqB,EAAEC,OAAOC,UA+CxD,wBAAQC,QAASjB,EAAjB,uBAEA,wBAAQiB,QAASX,EAAjB,uBAEA,+CAAWZ,QAAX,IAAWA,OAAX,EAAWA,EAAMwB,SAEnB,6BAAKtB,QChEIuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd6e30a6.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {getAuth} from 'firebase/auth'\r\n\r\nconst {REACT_APP_API_KEY}=process.env\r\nconst firebaseConfig = {\r\n    apiKey: `${REACT_APP_API_KEY}`,\r\n    authDomain: \"first-project-with-fireb-a740d.firebaseapp.com\",\r\n    projectId: \"first-project-with-fireb-a740d\",\r\n    storageBucket: \"first-project-with-fireb-a740d.appspot.com\",\r\n    messagingSenderId: \"1045301967041\",\r\n    appId: \"1:1045301967041:web:eff66429dc2ad76a893c40\",\r\n    measurementId: \"G-BBGB5TBK7Q\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n\r\n  export const auth = getAuth(app);","import React, { useState } from \"react\";\nimport {createUserWithEmailAndPassword,onAuthStateChanged,signOut,signInWithEmailAndPassword} from 'firebase/auth'\nimport {auth} from './firebase-config'\nimport './App.css';\n\nfunction App() {\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [user,setUser]=useState({ });\n  const [err,setErr]=useState('');\n\n onAuthStateChanged(auth,(currentUser)=>{\n     setUser(currentUser);\n })\n\n\n  const emailHandlerReg = (e) => { setRegisterEmail(e.target.value) };\n  const passwordHandlerReg = (e) => { setRegisterPassword(e.target.value) };\n\n\n  const emailHandlerLog = (e) => { setLoginEmail(e.target.value) };\n  const passwordHandlerLog = (e) => { setLoginPassword(e.target.value) };\n\n\n  const login = async () => {\n    try{\n        const user = await signInWithEmailAndPassword(auth,loginEmail,loginPassword);\n        console.log(user);\n  \n      }\n              catch(error){\n                setErr(error.message);\n                console.log(error.message);\n        }\n  };\n  const logOut = async () => {\n      await signOut(auth);\n  };\n  const SignUp = async () => {\n    try{\n        const user = await createUserWithEmailAndPassword(auth,registerEmail,registerPassword);\n        console.log(user);\n  \n      }\n              catch(error){\n                setErr(error.message);\n            console.log(error.message);\n        }\n  };\n  return (\n    <div>\n      <div>\n        <h1>SIGN UP</h1>\n        <label htmlFor=\"email\">Email</label>\n        <input name=\"email\" type=\"text\" onChange={emailHandlerReg}/>\n\n        <label htmlFor=\"password\">Password</label>\n        <input name=\"password\" type=\"password\" onChange={passwordHandlerReg}/>\n        <button onClick={SignUp}> Create User</button>\n      </div>\n\n      <div>\n        <h1>LOG IN</h1>\n        <label htmlFor=\"email\">Email</label>\n        <input name=\"email\" type=\"text\" onChange={emailHandlerLog}/>\n\n        <label htmlFor=\"password\">Password</label>\n        <input name=\"password\" type=\"password\" onChange={passwordHandlerLog}/>\n        <button onClick={login}> Login</button>\n        </div>\n        <button onClick={logOut}> Sign Out</button>\n      \n        <h1>User: {user?.email}</h1>\n     \n      <h1>{err}</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}